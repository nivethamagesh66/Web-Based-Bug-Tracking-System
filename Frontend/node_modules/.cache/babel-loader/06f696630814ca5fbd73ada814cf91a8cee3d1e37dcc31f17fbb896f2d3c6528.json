{"ast":null,"code":"var _jsxFileName = \"/Users/nivetha/Desktop/Bughoundworking/Frontend/src/pages/ViewBugs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/managePrograms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewBugs = () => {\n  _s();\n  const [bugs, setBugs] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchBugs();\n  }, []);\n  const fetchBugs = async () => {\n    try {\n      var _res$data;\n      const token = localStorage.getItem(\"token\");\n      const res = await axios.get(\"http://localhost:8080/api/bugs\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Bugs API response:\", res.data);\n\n      // ✅ Ensure bugs is always an array\n      const bugList = Array.isArray(res.data) ? res.data : ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.bugs) || [];\n      setBugs(bugList);\n    } catch (err) {\n      console.error(\"Error fetching bugs:\", err);\n      setError(\"Failed to fetch bugs.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-programs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reported Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Severity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Array.isArray(bugs) && bugs.length > 0 ? bugs.map(bug => {\n            var _bug$program;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bug.bugId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bug.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_bug$program = bug.program) === null || _bug$program === void 0 ? void 0 : _bug$program.name) || \"Unknown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bug.severity || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bug.status || \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, bug.bugId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No bugs found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewBugs, \"6NW0qzjvsZjs9tyigyHqGo4iGOo=\");\n_c = ViewBugs;\nexport default ViewBugs;\nvar _c;\n$RefreshReg$(_c, \"ViewBugs\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ViewBugs","_s","bugs","setBugs","error","setError","fetchBugs","_res$data","token","localStorage","getItem","res","get","headers","Authorization","console","log","data","bugList","Array","isArray","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","bug","_bug$program","bugId","title","program","name","severity","status","colSpan","style","textAlign","_c","$RefreshReg$"],"sources":["/Users/nivetha/Desktop/Bughoundworking/Frontend/src/pages/ViewBugs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/managePrograms.css\";\n\nconst ViewBugs = () => {\n  const [bugs, setBugs] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    fetchBugs();\n  }, []);\n\n  const fetchBugs = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await axios.get(\"http://localhost:8080/api/bugs\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      console.log(\"Bugs API response:\", res.data);\n\n      // ✅ Ensure bugs is always an array\n      const bugList = Array.isArray(res.data) ? res.data : res.data?.bugs || [];\n      setBugs(bugList);\n    } catch (err) {\n      console.error(\"Error fetching bugs:\", err);\n      setError(\"Failed to fetch bugs.\");\n    }\n  };\n\n  return (\n    <div className=\"manage-programs-container\">\n      <h2>Reported Bugs</h2>\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Program</th>\n              <th>Severity</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(bugs) && bugs.length > 0 ? (\n              bugs.map((bug) => (\n                <tr key={bug.bugId}>\n                  <td>{bug.bugId}</td>\n                  <td>{bug.title}</td>\n                  <td>{bug.program?.name || \"Unknown\"}</td>\n                  <td>{bug.severity || \"N/A\"}</td>\n                  <td>{bug.status || \"Open\"}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"5\" style={{ textAlign: \"center\" }}>\n                  No bugs found.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewBugs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}